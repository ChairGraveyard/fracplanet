- Mail http://objects.povworld.org/links7.html.  Also links at main POV site.
- Add export to wavefront .obj format and try importing to blender.
Output:
 c_interp on
 d_interp on
... use a material library and assign materials per vertex...
 v . . . for vertices
 vn . . . for vertex normals
 f .//. .//. .//. referencing 1-based vertex and vertex normal indices
Will probably have to generate a fixed number of materials
(blends between the standard colours) and map each vertex to the nearest one.
Alternative export formats ? NFF too simple.
Oho... apparently blender supports VRML.

- Terrain patches but with planetary geometry (ie curvature).
  This would give a sensible horizon when near the centre of the patch.
- Control over treeline and shoreline heights (these are hardwired currently).
- Clean up progress stuff; push steps->% (rate management) into progress API.
- std::auto_ptr sucks; use something better from boost
- Add perturbation decay rate for subdivision too.
- Noise perturbation in X&Y too;
  might help break up subdivision ridge artefacts
- "man" page instead/besides HTML
- Built-in manual like evolvotron
- Render tab setting to hide fly mode instructions
- Make more keys do stuff in fly mode
- Ability to load/save planet parameters (simple keyword=value text file)
- Console mode app: read parameters, generate planet.
- Fix river/lake hang for high subdivision levels
- Option to add Perlin noise to terrain (might make rivers meander more)
  Also completely noise generated terrain.
  Also modify terrain colours
- Continue GUI procesing when progressing.
- More feedback (progress bar?) when building display list
  (unfortunately a lot of the delay happens in OpenGL when the list is completed)
- Borrow some improvements from sister evolvotron project
- Check for OpenGL errors
- Add control over heights at which colours switch.
- Improve code documentation.
- Cloud layer (as polygon mesh).
- Save/load parameters.  Automatic mode (load parameters, generate model, exit).
- Ice packs.
- Seasonal variations.
- Ability to save sequences of models (probably by offline generation for parameter file load)
- Are we 64bit ready ?  Onwards to subdivision level 12,13,14...
- Put ONLY the terrain data in the .inc file; rest in .pov or a different .inc
- Split up mesh file (3 parts: vertices, colours, meshing)
- Alternative output formats.
- Ringworld and Dyson sphere/hollow-Earth starting geometries for fun.
